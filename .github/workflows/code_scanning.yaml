name: Code Quality and Security Analysis

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  analyze:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tool: [sonarcloud, semgrep]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK (only for SonarCloud)
        if: matrix.tool == 'sonarcloud'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Verify Java Version
        if: matrix.tool == 'sonarcloud'
        run: java -version

      - name: Print JAVA_HOME and PATH
        if: matrix.tool == 'sonarcloud'
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          echo "PATH: $PATH"

          
      - name: Install SonarScanner
        if: matrix.tool == 'sonarcloud'
        run: |
          # Download the latest version of SonarScanner
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH

      - name: Verify SonarScanner Installation
        if: matrix.tool == 'sonarcloud'
        run: |
          which sonar-scanner || echo "SonarScanner is not installed in the PATH."
          sonar-scanner -v || echo "Unable to retrieve SonarScanner version."

      - name: SonarCloud Scan
        if: matrix.tool == 'sonarcloud'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          export JAVA_HOME=/opt/hostedtoolcache/Java_Adopt_jdk/17.0.13-11/x64
          export PATH=$JAVA_HOME/bin:$PATH
          sonar-scanner \
            -Dsonar.organization="kishore3github" \
            -Dsonar.projectKey="kishore3github_gradle-example" \
            -Dsonar.sources="src" \
            -Dsonar.host.url="https://sonarcloud.io"

      - name: Run Semgrep
        if: matrix.tool == 'semgrep'
        uses: returntocorp/semgrep-action@v1
        with:
          config: 'p/ci'
