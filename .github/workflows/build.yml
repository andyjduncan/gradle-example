name: Build Gradle Project

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '40 9 * * *' # 3:10 PM IST

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Use GitHub Secret
        env:
          MY_SECRET: ${{ secrets.MY_SECRET }}
        run: |
          echo "The secret is $MY_SECRET" >> var.log
          cat var.log

      - name: Build with Gradle
        run: ./gradlew clean shadowJar

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: gradle-example-all
          path: build/libs/gradle-example-all.jar

  unit-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JUnit Tests
          path: build/test-results/**/*.xml
          reporter: java-junit

  code-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run code coverage
        run: ./gradlew jacocoTestReport

      - name: Upload XML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-xml
          path: build/reports/jacoco/test/jacocoTestReport.xml

      - name: Generate Markdown Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: build/reports/jacoco/test/jacocoTestReport.xml
          format: markdown
          output: both
          badge: true

      - name: Post Coverage Comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: build/reports/jacoco/test/html